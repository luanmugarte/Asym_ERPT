nome_modelo = 'default'
desemprego_on = T
desemprego_diff = T
include_gfc_dummy = T
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
dados
# Caminho para o diretório padrão ####
# rm(list=ls())
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
# Comm exógeno ou endógeno
comm_endo = T
# Frequência (mensal ou trim)
modelo = 'mensal'
# Índice de inflação
inflation_index = 'igp'
# Tendência (1) ou sem tendência (0)
model_trend = 0
# Efeito contemporâneo presente (1) ou ausente  (0) da variável exógena
contemp_effect = 0
# Variável de demanda agregada (capacidade ou pimpf).
# Caso o modelo seja trim, também podem ser (pib ou pib_hiato)
DA_variable = 'pib'
# Horizonte das LP's
hor_lps <- 18
# Gamma da função de transição
gamma_transition = 3
# Lags das variáveis endógenas
# Escolhido endogenamento pelo criterio HQ
lag_endog = 1
# Lags das variáveis exógenas
lag_exog = 1
# Variável de inflação externa
ext_inflation = 'comm'
# Lags da variável de transição
lag_switch_variable = T
# Incluir dummy da GFC
include_gfc_dummy = F
# Intervalo de confiança das IRFs
sig_IC = 95
# Incluir taxa de desemprego?
desemprego_on = T
# Taxa de Desemprego em variação percentual
desemprego_diff = F
# Rodando código de estimação
source('Code/Model_Estimation.R', verbose = F)
# Exportando dados das configurações do modelo rodado
config_list <- data.frame(c(comm_endo,modelo))
config_list
# Exportando dados das configurações do modelo rodado
config_list <- data.frame(comm_endo,modelo)
config_list
stack(config_list)
# Exportando dados das configurações do modelo rodado
config_list <- list(comm_endo,modelo)
stack(config_list)
config_list
split(config_list,config_list$ind)
?list
# Exportando dados das configurações do modelo rodado
config_list <- c(comm_endo = comm_endo,
modelo = modelo,
inflation_index = inflation_index)
config_list
data_frame(config_list)
data.frame(config_list)
# Tendência (1) ou sem tendência (0)
model_trend = 0
# Exportando dados das configurações do modelo rodado
config_list <- list(comm_endo = comm_endo,
modelo = modelo,
inflation_index = inflation_index)
data.frame(config_list)
config_list
# Exportando dados das configurações do modelo rodado
config_list <- c(comm_endo = comm_endo,
modelo = modelo,
inflation_index = inflation_index)
config_list
data.frame(config_list)
# Exportando dados das configurações do modelo rodado
config_list <- c(modelo = modelo,
DA_variable = DA_variable,
comm_endo = comm_endo,
inflation_index = inflation_index,
model_trend = model_trend,
contemp_effect = contemp_effect,
lag_endog = lag_endog,
lag_exog = lag_exog,
ext_inflation = ext_inflation,
lag_switch_variable = lag_switch_variable,
gamma_transition = gamma_transition,
include_gfc_dummy = include_gfc_dummy,
sig_IC = sig_IC,
desemprego_on = desemprego_on,
desemprego_diff = desemprego_diff,
hor_lps = hor_lps
)
data.frame(config_list)
write.table(config_list, file = paste0("config",stringr::str_to_upper(inflation_index),".txt"),sep="\t",row.names=FALSE)
# Exportando dados das configurações do modelo rodado
config_list <- c(modelo = modelo,
DA_variable = DA_variable,
comm_endo = comm_endo,
inflation_index = inflation_index,
model_trend = model_trend,
contemp_effect = contemp_effect,
lag_endog = lag_endog,
lag_exog = lag_exog,
ext_inflation = ext_inflation,
lag_switch_variable = lag_switch_variable,
gamma_transition = gamma_transition,
include_gfc_dummy = include_gfc_dummy,
sig_IC = sig_IC,
desemprego_on = desemprego_on,
desemprego_diff = desemprego_diff,
hor_lps = hor_lps
)
config_List <- data.frame(config_list)
write.table(config_list, file = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),sep="\t",row.names=FALSE)
# Exportando dados das configurações do modelo rodado
config_list <- c(modelo = modelo,
DA_variable = DA_variable,
comm_endo = comm_endo,
inflation_index = inflation_index,
model_trend = model_trend,
contemp_effect = contemp_effect,
lag_endog = lag_endog,
lag_exog = lag_exog,
ext_inflation = ext_inflation,
lag_switch_variable = lag_switch_variable,
gamma_transition = gamma_transition,
include_gfc_dummy = include_gfc_dummy,
sig_IC = sig_IC,
desemprego_on = desemprego_on,
desemprego_diff = desemprego_diff,
hor_lps = hor_lps
)
config_list <- data.frame(config_list)
write.table(config_list, file = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),sep="\t",row.names=FALSE)
config_list <- data.frame(names(config_list),config_list)
write.table(config_list, file = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),sep="\t",row.names=FALSE)
names(config_list)
# Exportando dados das configurações do modelo rodado
config_list <- c(modelo = modelo,
DA_variable = DA_variable,
comm_endo = comm_endo,
inflation_index = inflation_index,
model_trend = model_trend,
contemp_effect = contemp_effect,
lag_endog = lag_endog,
lag_exog = lag_exog,
ext_inflation = ext_inflation,
lag_switch_variable = lag_switch_variable,
gamma_transition = gamma_transition,
include_gfc_dummy = include_gfc_dummy,
sig_IC = sig_IC,
desemprego_on = desemprego_on,
desemprego_diff = desemprego_diff,
hor_lps = hor_lps
)
names(config_list)
# Exportando dados das configurações do modelo rodado
config_list <- c(modelo = modelo,
DA_variable = DA_variable,
comm_endo = comm_endo,
inflation_index = inflation_index,
model_trend = model_trend,
contemp_effect = contemp_effect,
lag_endog = lag_endog,
lag_exog = lag_exog,
ext_inflation = ext_inflation,
lag_switch_variable = lag_switch_variable,
gamma_transition = gamma_transition,
include_gfc_dummy = include_gfc_dummy,
sig_IC = sig_IC,
desemprego_on = desemprego_on,
desemprego_diff = desemprego_diff,
hor_lps = hor_lps
)
config_list <- data.frame(names(config_list),config_list)
names(config_list)
write.table(config_list, file = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),sep="\t",row.names=FALSE)
# Exportando dados das configurações do modelo rodado
config_list <- c(modelo = modelo,
DA_variable = DA_variable,
comm_endo = comm_endo,
inflation_index = inflation_index,
model_trend = model_trend,
contemp_effect = contemp_effect,
lag_endog = lag_endog,
lag_exog = lag_exog,
ext_inflation = ext_inflation,
lag_switch_variable = lag_switch_variable,
gamma_transition = gamma_transition,
include_gfc_dummy = include_gfc_dummy,
sig_IC = sig_IC,
desemprego_on = desemprego_on,
desemprego_diff = desemprego_diff,
hor_lps = hor_lps
)
config_list <- data.frame(names(config_list),config_list)
fwrite(config_list, file = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),sep="\t",row.names=FALSE)
fwrite(config_list,
file = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),
# sep="\t",
sep = ",",
col.names=T,
append=T)
stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),".txt"))
# Exportando dados das configurações do modelo rodado
config_list <- c(modelo = modelo,
DA_variable = DA_variable,
comm_endo = comm_endo,
inflation_index = inflation_index,
model_trend = model_trend,
contemp_effect = contemp_effect,
lag_endog = lag_endog,
lag_exog = lag_exog,
ext_inflation = ext_inflation,
lag_switch_variable = lag_switch_variable,
gamma_transition = gamma_transition,
include_gfc_dummy = include_gfc_dummy,
sig_IC = sig_IC,
desemprego_on = desemprego_on,
desemprego_diff = desemprego_diff,
hor_lps = hor_lps
)
config_list <- data.frame(config_list)
stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),".txt"))
# Índice de inflação
inflation_index = 'igp'
# Incluir dummy da GFC
include_gfc_dummy = F
# Lista de outras opções
lags_option <- c(1:2)
gamma_option <- c(3,6,9)
CI_option <- c(90,95)
# Contador simples
counter <- 0
loop_counter <- 0
# Código do for loop
first_loop <- lags_option
second_loop <- gamma_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
DA_variable = 'pib'
ext_inflation = 'comm'
gamma_transition = j
sig_IC = 95
nome_modelo = 'default'
desemprego_on = T
desemprego_diff = T
include_gfc_dummy = T
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),
silent = T)
stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),
echo = T)
stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),".txt"),
echo = F)
suppressMessages(stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),".txt"))
)
output_without_message <- capture.output(stargazer(stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),".txt"))
))
output_without_message <- capture.output(stargazer(stargazer(config_list,
summary = FALSE,
type = "text",
out = paste0("config_",stringr::str_to_upper(inflation_index),"2.txt"))
))
# Código do for loop
first_loop <- lags_option
second_loop <- gamma_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
DA_variable = 'pib'
ext_inflation = 'comm'
gamma_transition = j
sig_IC = 95
nome_modelo = 'default'
desemprego_on = T
desemprego_diff = T
include_gfc_dummy = T
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
VARselect(modelo_endo, lag.max = 24)
desemprego_diff = F
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
DA_variable = 'pib'
ext_inflation = 'comm'
gamma_transition = j
sig_IC = 95
nome_modelo = 'default'
desemprego_on = T
desemprego_diff = F
include_gfc_dummy = T
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
# Índice de inflação
inflation_index = 'ipa'
# Incluir dummy da GFC
include_gfc_dummy = F
# Lista de outras opções
lags_option <- c(1:2)
gamma_option <- c(3,6,9)
CI_option <- c(90,95)
# Contador simples
counter <- 0
loop_counter <- 0
# Código do for loop
first_loop <- lags_option
second_loop <- gamma_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
DA_variable = 'pib'
ext_inflation = 'comm'
gamma_transition = j
sig_IC = 95
nome_modelo = 'default'
desemprego_on = T
desemprego_diff = F
include_gfc_dummy = T
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
# Código do for loop
first_loop <- lags_option
second_loop <- gamma_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
DA_variable = 'pib'
ext_inflation = 'comm'
gamma_transition = j
sig_IC = 95
nome_modelo = 'default'
desemprego_on = F
desemprego_diff = F
include_gfc_dummy = T
inflation_index = 'ipa'
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
inflation_index = 'igp'
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
# Lista de outras opções
lags_option <- c(1:2)
gamma_option <- c(3,6,9)
CI_option <- c(90,95)
inflation_index_option <- c('ipca','igp','ipa')
DA_variable_option <- c('pib','pib_hiato')
# Contador simples
counter <- 0
loop_counter <- 0
# Código do for loop
first_loop <- inflation_index_option
second_loop <- DA_variable_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = 2
DA_variable = j
ext_inflation = 'comm'
gamma_transition = 9
sig_IC = 95
nome_modelo = 'default'
desemprego_on = F
desemprego_diff = F
include_gfc_dummy = T
inflation_index = i
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
inflation_index_option <- c('ipca','igp','ipa')
DA_variable_option <- c('pib','pimpf','capacidade')
# Contador simples
counter <- 0
loop_counter <- 0
# Código do for loop
first_loop <- inflation_index_option
second_loop <- DA_variable_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = 2
DA_variable = j
ext_inflation = 'comm'
gamma_transition = 9
sig_IC = 95
nome_modelo = 'default'
desemprego_on = T
desemprego_diff = F
include_gfc_dummy = T
inflation_index = i
try( source('Code/Model_Estimation.R', verbose = F), silent = T )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
