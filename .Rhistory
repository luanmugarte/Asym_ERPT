"jsonlite",
"purrr",
"stringr",
"scales",
"forcats"
pacman::p_load(
"tidytext",
"pdftools",
"stopwords",
"textdata",
"dplyr",
"tidyr",
"lubridate",
"magrittr",
"knitr",
"ggplot2",
"ggthemes",
"jsonlite",
"purrr",
"stringr",
"scales",
"forcats")
# URL para página com JSON dos links das atas
www_all <- "https://www.bcb.gov.br/api/servico/sitebcb/copomminutes/ultimas?quantidade=2000&filtro="
# Raspagem de dados
raw_copom <- jsonlite::fromJSON(www_all)[["conteudo"]] %>%
dplyr::as_tibble() %>%
dplyr::select(meeting = "Titulo", url = "Url") %>%
dplyr::mutate(url = paste0("https://www.bcb.gov.br", url)) %>%
dplyr::mutate(text = purrr::map(url, pdftools::pdf_text))
# Raspagem de dados
raw_copom <- jsonlite::fromJSON(www_all)[["conteudo"]] %>%
dplyr::as_tibble() %>%
dplyr::select(meeting = "Titulo", url = "Url")
# %>%
#   mutate(LinkPagina = str_replace_all(url,' ', '%20')) %>%
#   dplyr::mutate(url = paste0("https://www.bcb.gov.br", url)) %>%
#   dplyr::mutate(text = purrr::map(url, pdftools::pdf_text))
raw_copom
# Raspagem de dados
raw_copom <- jsonlite::fromJSON(www_all)[["conteudo"]] %>%
dplyr::as_tibble() %>%
dplyr::select(meeting = "Titulo", url = "Url") %>%
mutate(LinkPagina = str_replace_all(url,' ', '%20')) %>%
dplyr::mutate(url = paste0("https://www.bcb.gov.br", url)) %>%
dplyr::mutate(text = purrr::map(url, pdftools::pdf_text))
# Raspagem de dados
raw_copom <- jsonlite::fromJSON(www_all)[["conteudo"]] %>%
dplyr::as_tibble() %>%
dplyr::select(meeting = "Titulo", url = "Url") %>%
mutate(url = str_replace_all(url,' ', '%20')) %>%
dplyr::mutate(url = paste0("https://www.bcb.gov.br", url)) %>%
dplyr::mutate(text = purrr::map(url, pdftools::pdf_text))
raw_copom
# Raspagem de dados
raw_copom <- jsonlite::fromJSON(www_all)[["conteudo"]] %>%
dplyr::as_tibble() %>%
dplyr::select(meeting = "Titulo", url = "Url") %>%
mutate(url = str_replace_all(url,' ', '%20')) %>%
dplyr::mutate(url = paste0("https://www.bcb.gov.br", url)) %>%
dplyr::mutate(text = purrr::map(url, pdftools::pdf_text)) %>%
glimpse(.)
raw_copom
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup() %>%
tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
View(copom_clean)
View(copom_clean)
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings")
copom_clean
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) #%>%
copom_clean
View(copom_clean)
View(copom_clean)
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup() %>%
tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
glimpse(copom_clean)
View(copom_clean)
View(copom_clean)
# Variável de comm para o caso de ser exógeno
comm_df <- dados %>%
dplyr::select(comm) %>%
mutate(across(everything(),as.numeric)) %>%
mutate(across(everything(),dlog))
source('~/Teoria e Economia Aplicada/Análise de sentimento/COPOM_Text_Analysis/get_minutes_AnaliseMacro.R', echo=TRUE)
copom_clean
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
# dplyr::ungroup() %>%
tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
glimpse(copom_clean)
glimpse(raw_copom)
raw_copom$text[1]
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting)
#   dplyr::mutate(
#     page = dplyr::row_number(),
#     text = strsplit(text, "\r") %>% gsub("\n", "", .),
#     meeting = stringr::str_sub(meeting, 1, 3) %>%
#       stringr::str_remove("[:alpha:]") %>%
#       as.numeric()
#   ) %>%
#   # dplyr::ungroup() %>%
#   tidyr::unnest(text) %>%
#   dplyr::arrange(meeting)
copom_clean
glimpse(copom_clean)
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup()
# %>%
#   tidyr::unnest(text) %>%
#   dplyr::arrange(meeting)
copom_clean
glimpse(copom_clean)
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup() %>%
tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup() %>%
# tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup() %>%
tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
copom_clean_minutes %>%
dplyr::group_by(meeting)
copom_clean_minutes <- copom_clean %>%
dplyr::group_by(meeting)
copom_clean_minutes
install.packages("bslib")
bslib::bootswatch_themes()
summarise(text = paste(text, collapse = '')
source('~/Teoria e Economia Aplicada/Análise de sentimento/COPOM_Text_Analysis/get_minutes_AnaliseMacro.R', echo=TRUE)
source('~/Teoria e Economia Aplicada/Análise de sentimento/COPOM_Text_Analysis/get_minutes_AnaliseMacro.R', echo=TRUE)
copom_clean_minutes
copom_clean
glimpse(copom_clean)
glimpse(raw_copom)
raw_copom$text[1]
copom_clean_minutes <- copom_clean %>%
group_by(meeting) %>%
summarise(text = paste(text, collapse = ''))
copom_clean_minutes
source('~/Teoria e Economia Aplicada/Análise de sentimento/COPOM_Text_Analysis/get_minutes_AnaliseMacro.R', echo=TRUE)
copom_clean_minutes <- copom_clean %>%
group_by(meeting) %>%
summarise(text = paste(text, collapse = ' '))
copom_clean_minutes
copom_clean
glimpse(copom_clean)
glimpse(raw_copom)
raw_copom$text[1]
source('~/Teoria e Economia Aplicada/Análise de sentimento/COPOM_Text_Analysis/get_minutes_AnaliseMacro.R', echo=TRUE)
copom_clean
glimpse(copom_clean)
glimpse(raw_copom)
raw_copom$text[1]
raw_copom
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup() %>%
tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
glimpse(copom_clean)
glimpse(raw_copom)
raw_copom$text[1]
raw_copom$text[1][1]
raw_copom$text[[1]][1]
raw_copom$text[[1]][2]
# URL para página com JSON dos links das atas
www_all <- "https://www.bcb.gov.br/api/servico/sitebcb/copomminutes/ultimas?quantidade=2000&filtro="
# Raspagem de dados
raw_copom <- jsonlite::fromJSON(www_all)[["conteudo"]] %>%
dplyr::as_tibble() %>%
dplyr::select(meeting = "Titulo", url = "Url") %>%
mutate(url = str_replace_all(url,' ', '%20')) %>%
dplyr::mutate(url = paste0("https://www.bcb.gov.br", url)) %>%
dplyr::mutate(text = purrr::map(url, pdftools::pdf_text)) %>%
glimpse(.)
# Tratamento de dados
copom_clean <- raw_copom %>%
tidyr::unnest(text) %>%
dplyr::filter(!meeting == "Changes in Copom meetings") %>%
dplyr::group_by(meeting) %>%
dplyr::mutate(
page = dplyr::row_number(),
text = strsplit(text, "\r") %>% gsub("\n", "", .),
meeting = stringr::str_sub(meeting, 1, 3) %>%
stringr::str_remove("[:alpha:]") %>%
as.numeric()
) %>%
dplyr::ungroup() %>%
tidyr::unnest(text) %>%
dplyr::arrange(meeting)
copom_clean
glimpse(copom_clean)
glimpse(raw_copom)
raw_copom$text[[1]][2]
copom_really_clean %>%
dplyr::mutate(text = gsub("\n","",.))
copom_really %>%
dplyr::mutate(text = gsub("\n","",.))
copom_clean %>%
dplyr::mutate(text = gsub("\n","",.))
copom_clean_minutes <- copom_clean %>%
rowwise() %>%
group_by(meeting) %>%
summarise(text = paste(text, collapse = ' '))
copom_clean_minutes
copom_clean %>%
rowwise() %>%
dplyr::mutate(text = gsub("\n","",.))
copom_clean %>%
rowwise() %>%
dplyr::mutate(text = gsub("\n","",text))
copom_really_clean <- copom_clean %>%
rowwise() %>%
dplyr::mutate(text = gsub("\n","",text))
glimpse(copom_really_clean)
copom_really_clean$text[[1]][2]
copom_really_clean$text
copom_really_clean$text[1]
raw_copom$text[[1]][1]
copom_clean$text[[1]][2]
copom_clean$text[[1]][1]
source('~/Teoria e Economia Aplicada/Análise de sentimento/COPOM_Text_Analysis/get_minutes_AnaliseMacro.R', echo=TRUE)
source('~/Teoria e Economia Aplicada/Análise de sentimento/COPOM_Text_Analysis/get_minutes_AnaliseMacro.R', echo=TRUE)
# Carregando pacotes
here::here('Base_de_dados','POF','Pacotes.R')
pof_cat <-
get_catalog( "pof" ,
output_dir = here::here('Bases_de_dados','POF','Microdados') )
# Novos
library(survey)
library(data.table)
library(here)
library(lodown)
# Carregando pacotes
here::here('Base_de_dados','POF','Pacotes.R')
pof_cat <-
get_catalog( "pof" ,
output_dir = here::here('Bases_de_dados','POF','Microdados') )
# 2008-2009 only
pof_cat <- subset( pof_cat , period == "2008_2009" )
# download the microdata to your local computer
pof_cat <- lodown( "pof" , pof_cat )
?hpfilter
library(mFilter)
library(smooth)
library(x13binary)
library(seasonal)
?hpfilter
# Lista de outras opções
lags_option <- c(2,3,5,7)
gamma_option <- c(4,6,8)
# Contador simples
counter <- 0
loop_counter <- 0
# Escolhas consolidadas ####
# Tendência (1) ou sem tendência (0)
model_trend = 0
# Efeito contemporâneo presente (1) ou ausente  (0) da variável exógena
contemp_effect = 1
# Lags da variável de transição
lag_switch_variable = T
# Frequência (mensal ou trim)
modelo = 'mensal'
# Horizonte das LP's
hor_lps <- 18
# Intervalo de confiança das IRFs
sig_IC = 95
# Inflação externa endógena
comm_endo = T
# Variável de inflação externa
ext_inflation = 'petro'
# Índice de inflação
inflation_index = 'ipca'
# Lags das variáveis exógenas
lag_exog = 1
# Incluir dummy da GFC
include_gfc_dummy = T
# Taxa de desemprego no modelo
desemprego_on = T
# Taxa de Desemprego em variação percentual
desemprego_diff = T
# Taxa de desemprego como variável exógena (mais apropriado para comparação de índices de inflação)
desemprego_exog = F
# Lista de outras opções
lags_option <- c(2,3,5,7)
gamma_option <- c(4,6,8)
# Contador simples
counter <- 0
loop_counter <- 0
# Código do for loop
first_loop <- lags_option
second_loop <- gamma_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
gamma_transition = j
nome_modelo = 'default'
DA_variable = 'pib'
try(source('Code/Model_Estimation.R', verbose = F), silent = F )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter*2," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
# Incluir dummy da GFC
include_gfc_dummy = T
# Taxa de desemprego no modelo
desemprego_on = T
# Taxa de Desemprego em variação percentual
desemprego_diff = T
# Taxa de desemprego como variável exógena (mais apropriado para comparação de índices de inflação)
desemprego_exog = F
# Lista de outras opções
lags_option <- c(2,3,5,7)
gamma_option <- c(4,6,8)
# Contador simples
counter <- 0
loop_counter <- 0
# Código do for loop
first_loop <- lags_option
second_loop <- gamma_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
gamma_transition = j
nome_modelo = 'default'
DA_variable = 'pib'
try(source('Code/Model_Estimation.R', verbose = F), silent = F )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter*2," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
# Variável de inflação externa
ext_inflation = 'comm'
# Índice de inflação
inflation_index = 'ipca'
# Lags das variáveis exógenas
lag_exog = 1
# Incluir dummy da GFC
include_gfc_dummy = T
# Taxa de desemprego no modelo
desemprego_on = T
# Taxa de Desemprego em variação percentual
desemprego_diff = T
# Taxa de desemprego como variável exógena (mais apropriado para comparação de índices de inflação)
desemprego_exog = F
# Lista de outras opções
lags_option <- c(2,3,5,7)
gamma_option <- c(4,6,8)
# Contador simples
counter <- 0
loop_counter <- 0
# Código do for loop
first_loop <- lags_option
second_loop <- gamma_option
for (i in first_loop){
for (j in second_loop) {
# Caso interrompa loop
path_directory <- '/home/luanmugarte/Artigos/Asym_ERPT'
setwd(path_directory)
lag_endog = i
gamma_transition = j
nome_modelo = 'default'
DA_variable = 'pib'
try(source('Code/Model_Estimation.R', verbose = F), silent = F )
if (dir.exists(file.path('Output/Figures', nome_modelo))) {
counter = counter + 1
print(paste0(counter*2," model(s) run!"))
}
loop_counter <- loop_counter + 1
}
if (loop_counter == length(first_loop)*length(second_loop)) {
print("Done!")
}
}
