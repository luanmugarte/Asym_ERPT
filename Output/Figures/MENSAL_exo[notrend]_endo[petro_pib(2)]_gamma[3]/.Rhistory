results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
)
# Criando um vetor que contem os objetos dos plots
plot_lst <- vector("list", length = length(modelo_endo))
for (i in 1:2) {
tryCatch(expr = {
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
)
},
error = function(error_in_function){
message("Error in tibble!")
print(error_in_function)
}
)
plot_lst[[i]] <- ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
}
for (i in 1:2) {
tryCatch(expr = {
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')))
},
error = function(error_in_function){
message("Error in tibble!")
print(error_in_function)
}
)
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
)
plot_lst[[i]] <- ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
}
# Criando um vetor que contem os objetos dos plots
plot_lst <- vector("list", length = length(modelo_endo))
for (i in 1:2) {
tryCatch(expr = {
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')))
},
error = function(error_in_function){
message("Error in tibble!")
print(error_in_function)
}
)
)
plot_lst[[i]] <- ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
}
IRF_s1 <- tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
IRF_upper_base
IRF_s1
# Criando um vetor que contem os objetos dos plots
plot_lst <- vector("list", length = length(modelo_endo))
for (i in 1:2) {
tryCatch(expr = {
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')))
},
error = function(error_in_function){
message("Error in tibble!")
print(error_in_function)
}
)
plot_lst[[i]] <- ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
}
IRF_s1
IRF_s1
IRF_s1 %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
IRF_s1 %>%
rowwise() %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
IRF_s1 %>%
rowwise() %>%
if_else((IRF_upper_base < IRF_lower_base), mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
IRF_s1 %>%
rowwise() %>%
if_else((IRF_lower_base > IRF_upper_base), mutate(IRF_upper = IRF_lower_base), mutate(IRF_upper = IRF_upper_base)) %>%
if_else(IRF_upper_base < IRF_lower_base, mutate(IRF_lower = IRF_upper_base), mutate(IRF_lower = IRF_lower_base))
IRF_s1
IRF_s1 %>%
rowwise() %>%
filter((IRF_lower_base > IRF_upper_base)) %>%
mutate(IRF_upper = IRF_lower_base) %>%
mutate(IRF_lower = IRF_upper_base)
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
IRF_s1
IRF_s1
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
IRF_s1
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
IRF_s1
IRF_s1
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base))
IRF_s1
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
slice(!c(IRF_upper_base,IRF_lower_base))
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
select(!c(IRF_upper_base,IRF_lower_base))
IRF_s1
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
select(!c(IRF_upper_base,IRF_lower_base))
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
select(across(!c(IRF_upper_base,IRF_lower_base)))
IRF_s1
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
select(across(!c(IRF_upper_base,IRF_lower_base)))
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dyplr::select(across(!c(IRF_upper_base,IRF_lower_base)))
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dpylr::select(across(!c(IRF_upper_base,IRF_lower_base)))
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dplyr::select(across(!c(IRF_upper_base,IRF_lower_base)))
IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dplyr::select(!c(IRF_upper_base,IRF_lower_base))
IRF_s1
ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
# geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
# geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
# Criando um vetor que contem os objetos dos plots
plot_lst <- vector("list", length = length(modelo_endo))
for (i in 1:2) {
tryCatch(expr = {
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')))
},
error = function(error_in_function){
message("Error in tibble!")
print(error_in_function)
}
)
plot_lst[[i]] <- ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
}
IRF_s1
IRF_s1 <- IRF_s1 %>%
rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dplyr::select(!c(IRF_upper_base,IRF_lower_base))
IRF_s1
ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
# geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
# geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
IRF_s1 <- IRF_s1 %>%
# rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dplyr::select(!c(IRF_upper_base,IRF_lower_base))
IRF_s1
# Criando um vetor que contem os objetos dos plots
plot_lst <- vector("list", length = length(modelo_endo))
for (i in 1:2) {
tryCatch(expr = {
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')))
},
error = function(error_in_function){
message("Error in tibble!")
print(error_in_function)
}
)
plot_lst[[i]] <- ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
}
IRF_s1
IRF_s1 <- IRF_s1 %>%
# rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dplyr::select(!c(IRF_upper_base,IRF_lower_base))
ggdraw() +
draw_plot(plot_lst[[1]], x = 0, y = 0.67, height = .33, width = .5) +
draw_plot(plot_lst[[2]], x = 0.5, y = 0.67, height = .33, width = .5) +
draw_plot(plot_lst[[3]], x = 0, y = 0.33, height = .33, width = .5) +
draw_plot(plot_lst[[4]], x = 0.5, y = 0.33, height = .33, width = .5) +
draw_plot(plot_lst[[5]], x = 0.25, y = 0, height = .33, width = .5)
IRF_s1
IRF_s1
IRF_s1 <- IRF_s1 %>%
# rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dplyr::select(!c(IRF_upper_base,IRF_lower_base))
# Criando um vetor que contem os objetos dos plots
plot_lst <- vector("list", length = length(modelo_endo))
for (i in 1:2) {
tryCatch(expr = {
IRF_s1 <- suppressMessages(tibble(bind_cols(results_nl$irf_s1_mean[response,,i],
results_nl$irf_s1_up[response,,i],
results_nl$irf_s1_low[response,,i]),
.name_repair = ~ c('IRF','IRF_upper_base','IRF_lower_base')))
},
error = function(error_in_function){
message("Error in tibble!")
print(error_in_function)
}
)
plot_lst[[i]] <- ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
}
IRF_s1
IRF_s1 <- IRF_s1 %>%
# rowwise() %>%
mutate(IRF_upper = if_else(IRF_upper_base < IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
mutate(IRF_lower = if_else(IRF_upper_base > IRF_lower_base, IRF_lower_base,IRF_upper_base)) %>%
dplyr::select(!c(IRF_upper_base,IRF_lower_base))
ggplot(IRF_s1)  +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF, ymax =IRF_upper), fill = "GREY90") +
geom_ribbon(aes(x=c(0:hor_lps), ymin=IRF_lower, ymax =IRF), fill = "GREY90") +
geom_line(aes(x=c(0:hor_lps), y=IRF_upper), color = "GREY70") +
geom_line(aes(x=c(0:hor_lps), y=IRF_lower), color = "GREY70") +
geom_hline(yintercept = 0, colour= 'darkgrey', linetype = 'dashed') +
geom_line(aes(x=c(0:hor_lps), y=IRF), colour = 'cadetblue', size = 0.75) +
scale_x_continuous(name = "",breaks=seq(0,18,1),
) +
labs(title = paste0('Resposta do IPCA ao choque de ',colnames(modelo_endo[,i]),' - ',regime_1)) +
ylab('') +
theme_classic() +
theme(  panel.grid = element_blank(),
panel.border = element_blank(),
legend.position="right",
legend.title = element_text(hjust = 0.5),
legend.text = element_text(size=10),
legend.key = element_rect(colour = "black"),
legend.box.background = element_rect(colour = "black", size = 1),
plot.margin=grid::unit(c(0,-2,0,-5), "mm"),
plot.title = ggtext::element_markdown(size = 9, colour = 'black'),
axis.text.x = element_text(angle = 45, vjust = 0.6, hjust = 0.6,size=11, colour = 'black'),
axis.text.y = element_text(size=11,colour = 'black'))
